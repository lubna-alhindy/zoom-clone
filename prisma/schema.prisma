// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ConferenceStatus {
  running
  finished
}

enum UserConferenceStatus {
  in
  out
}

model User {
  id             String           @id @default(uuid())
  fullName       String
  email          String           @unique
  password       String
  createdAt      DateTime         @default(now())
  userConference UserConference[]
  message        Message[]
}

model Conference {
  id             String           @id @default(uuid())
  url            String
  name           String
  createdAt      DateTime         @default(now())
  status         ConferenceStatus @default(running)
  userConference UserConference[]
  message        Message[]
}

model UserConference {
  id           String               @id @default(uuid())
  userId       String
  conferenceId String
  isCreator    Boolean              @default(false)
  inDate       DateTime             @default(now())
  outDate      DateTime?
  status       UserConferenceStatus
  conference   Conference           @relation(fields: [conferenceId], references: [id])
  user         User                 @relation(fields: [userId], references: [id])
}

model Message {
  id           String     @id @default(uuid())
  userId       String
  conferenceId String
  message      String
  conference   Conference @relation(fields: [conferenceId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
}
